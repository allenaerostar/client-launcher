# filter job for only develop branch
develop-only: &develop-only
  filters:
    branches:
      only: develop

# filter job for only release branch
release-only: &release-only
  filters:
    branches:
      only: release

# filter job for protected branches
protected-only: &protected-only
  filters:
    branches:
      only:
        - master
        - develop
        - release
        - /feature[/].*/
        - /fix[/].*/
        - /chore[/].*/
        - /deploy[/].*/
        - /revert-.*/

version: 2
jobs:
  build-artifacts:
    machine: true # Build using our custom docker build image
    working_directory: ~/project/dietstory-routing
    steps:
      - checkout # check out the code in the project directory
      - run:
          name:  Build Dietstory Django Server Test image
          command: |
            ls &&
            docker build -t dietstory-django-tests -f Dockerfile.test .
      - run: # Run Dietstory Django Server Tests
          name: Run Dietstory Django Server Tests
          path: dietstory-routing
          command: |
            docker run -p 8000:8000 dietstory-django-tests
      - persist_to_workspace: # Persist required files for deployment
          root: ~/project
          paths: dietstory-routing

  deploy-develop: # Deploy artifacts to dev server
    machine: true
    working_directory: ~/project/dietstory-routing
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          command: |
            echo "Deploying to dev" && ls -lrt
      - run:
          command: |
            echo "Downloading dev SECRET_CONFIG_FILE.json from S3." && \
            aws s3 cp s3://dietstory-api-server-assets/dev/config/dietstory_secret_config.json \
                      dietstory-routing
      - run:
          name: Build Docker Image
          command: |
            echo "Building docker image" && \
            docker build -t dietstory-django -f Dockerfile.prod .
      - run:
         name: Clean up secrets
         command: |
            rm dietstory-routing/dietstory_secret_config.json
      - run:
          name: Compress Artifacts
          command: |
            zip -r dietstory-django.zip .
      - run:
          name: Push Develop Deployment
          command: |
            aws deploy push \
            --application-name dietstory-django-app-dev \
            --s3-location s3://dietstory-api-server-assets/dev/releases/dietstory-django.zip \
            --ignore-hidden-files
      - run:
          name: Deploy
          command: |
            aws deploy create-deployment \
            --application-name dietstory-django-app-dev \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --deployment-group-name dietstory-django-group-dev \
            --s3-location bucket=dietstory-api-server-assets,bundleType=zip,key=dev/releases/dietstory-django.zip

  deploy-release: # Deploy Artifacts to live server
    machine: true
    working_directory: ~/project/dietstory-routing
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          command: |
            echo "Deploying to release" && ls -lrt
      - run:
          command: |
            echo "Downloading prod SECRET_CONFIG_FILE.json from S3." && \
            aws s3 cp s3://dietstory-api-server-assets/prod/config/dietstory_secret_config.json \
                      dietstory-routing
      - run:
         name: Build Docker image
         command: |
           echo "Building docker image" && \
           docker build -t dietstory-django -f Dockerfile.prod .
      - run:
         name: Clean up secrets
         command: |
            rm dietstory-routing/dietstory_secret_config.json
      - run:
          name: Compress Artifacts
          command: |
            zip -r dietstory-django.zip .
      - run:
          name: Push Develop Deployment
          command: |
            aws deploy push \
            --application-name dietstory-django-app-prod \
            --s3-location s3://dietstory-api-server-assets/prod/releases/dietstory-django.zip \
            --ignore-hidden-files
      - run:
          name: Deploy
          command: |
            aws deploy create-deployment \
            --application-name dietstory-django-app-prod \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --deployment-group-name dietstory-django-group-prod \
            --s3-location bucket=dietstory-api-server-assets,bundleType=zip,key=prod/releases/dietstory-django.zip


# Workflows
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build-artifacts:
          <<: *protected-only
      - deploy-develop:
          <<: *develop-only
          requires:
            - build-artifacts
      - release-approval:
          <<: *release-only
          type: approval
          requires:
            - build-artifacts
      - deploy-release:
          <<: *release-only
          requires:
            - release-approval


          
